name: Build Lienol OpenWrt

on:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.github/workflows/lienol-openwrt.yml'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started

env:
  CONFIG_FILE: .config
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Remove old artifacts
      uses: c-hive/gha-remove-artifacts@v1
      with:
        age: '1 day'
        # Optional inputs
        # skip-tags: true
        # skip-recent: 5

    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    - name: Clone source code
      run: |
        git clone https://github.com/Lienol/openwrt.git
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: ADD custom config & packages
      run : |
        cp lienol-config openwrt/.config
        cd openwrt
        mkdir -p package/custom
        cd package/custom
        git clone https://github.com/frainzy1477/luci-app-clash.git
        git clone https://github.com/vernesong/OpenClash.git -b master
        cd ../..
        ./scripts/feeds update -a
        ./scripts/feeds install -a

#    - name: Modify LAN IP
#      run: |
#        cd lede 
#        sed -i 's/192.168.1.1/10.0.0.1/g' package/base-files/files/bin/config_generate

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      if: env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -sL https://git.io/cowtransfer | sh
        ./cowtransfer-uploader -s -p 8 ${FIRMWARE}
